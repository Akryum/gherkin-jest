// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`process should return the correct JS 1`] = `
"const {cucumber} = require(\\"gherkin-jest\\");const co = require(\\"co\\");describe(\\"Feature: \\" + \\"using feature files in jest\\", () => {beforeAll(() => cucumber.enterFeature([\\"someAttribute\\"]));afterAll(() => cucumber.exitFeature([\\"someAttribute\\"]));it(\\"a simple arithmetic test\\", () => {const world = cucumber.createWorld();return cucumber.enterScenario(world, [\\"someAttribute\\",\\"some-other-attribute\\"]).then(() => cucumber.rule(world, \\"I have numbers 3 and 4\\")).then(() => cucumber.rule(world, \\"I add them\\")).then(() => cucumber.rule(world, \\"I get 7\\")).then(() => cucumber.exitScenario(world, [\\"someAttribute\\",\\"some-other-attribute\\"]));});it(\\"a more complex test\\", () => {const world = cucumber.createWorld();return cucumber.enterScenario(world, [\\"someAttribute\\"]).then(() => cucumber.rule(world, \\"I have numbers 6 and 4\\")).then(() => cucumber.rule(world, \\"I subtract them\\")).then(() => cucumber.rule(world, \\"I get 2\\")).then(() => cucumber.exitScenario(world, [\\"someAttribute\\"]));});it(\\"a more complex test\\", () => {const world = cucumber.createWorld();return cucumber.enterScenario(world, [\\"someAttribute\\"]).then(() => cucumber.rule(world, \\"I have numbers 8 and 2\\")).then(() => cucumber.rule(world, \\"I divide them\\")).then(() => cucumber.rule(world, \\"I get 4\\")).then(() => cucumber.exitScenario(world, [\\"someAttribute\\"]));});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUMsb0VBQ1EsK0tBTUcscUtBQ0YsOENBREUsYUFFSCxrQ0FGRyxhQUdILCtCQUhHLHdGQUtRLHlJQUNWLDhDQURVLGFBRVgsdUNBRlcsYUFHWCwrQkFIVywwTUFDViw4Q0FEVSxhQUVYLHFDQUZXLGFBR1gsK0JBSFcsaUVBWFgiLCJmaWxlIjoidGVzdC5qcyJ9"
`;
