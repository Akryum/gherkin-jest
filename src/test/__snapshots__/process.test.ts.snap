// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`process should return the correct JS 1`] = `
"const {cucumber} = require(\\"stucumber\\");describe(\\"Feature: using feature files in jest\\", () => {beforeAll(() => cucumber.enterFeature([\\"someAttribute\\"]));afterAll(() => cucumber.exitFeature([\\"someAttribute\\"]));it(\\"a simple arithmetic test\\", () => {const world = cucumber.createWorld();return cucumber.enterScenario(world, [\\"someAttribute\\",\\"some-other-attribute\\"]).then(() => cucumber.rule(world, \\"I have numbers 3 and 4\\", null)).then(() => cucumber.rule(world, \\"I add them\\", null)).then(() => cucumber.rule(world, \\"I get 7\\", null)).then(() => cucumber.exitScenario(world, [\\"someAttribute\\",\\"some-other-attribute\\"]));});it(\\"a more complex test\\", () => {const world = cucumber.createWorld();return cucumber.enterScenario(world, [\\"someAttribute\\"]).then(() => cucumber.rule(world, \\"I have numbers 6 and 4\\", null)).then(() => cucumber.rule(world, \\"I subtract them\\", null)).then(() => cucumber.rule(world, \\"I get 2\\", null)).then(() => cucumber.exitScenario(world, [\\"someAttribute\\"]));});it(\\"a more complex test\\", () => {const world = cucumber.createWorld();return cucumber.enterScenario(world, [\\"someAttribute\\"]).then(() => cucumber.rule(world, \\"I have numbers 8 and 2\\", null)).then(() => cucumber.rule(world, \\"I divide them\\", null)).then(() => cucumber.rule(world, \\"I get 4\\", null)).then(() => cucumber.exitScenario(world, [\\"someAttribute\\"]));});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUMsd0NBQ1EsMEtBTUcscUtBQ0Ysb0RBREUsYUFFSCx3Q0FGRyxhQUdILHFDQUhHLHdGQUtRLHlJQUNWLG9EQURVLGFBRVgsNkNBRlcsYUFHWCxxQ0FIVywwTUFDVixvREFEVSxhQUVYLDJDQUZXLGFBR1gscUNBSFcsaUVBWFgiLCJmaWxlIjoidGVzdC5qcyJ9"
`;
